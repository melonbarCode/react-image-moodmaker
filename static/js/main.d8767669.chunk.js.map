{"version":3,"sources":["components/context/globalContext.js","components/FileDropArea/FileDropArea.js","components/Header/Header.js","components/ImagePreview/ImagePreview.js","components/Card.js","components/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalContext","createContext","state","actions","GlobalProvider","children","useState","imageFile","setImageFile","imageUrl","setImageUrl","value","imageBinary","setImageBinary","Provider","useGlobalContext","useContext","FileDropAreaStyledWrapper","styled","div","FileDropArea","fileInputRef","useRef","FileDrop","onDrop","files","event","reader","FileReader","onloadend","data","result","split","binaryBlob","atob","readAsDataURL","onTargetClick","current","click","onChange","target","ref","type","className","HeaderStyledWrapper","Header","ImagePreviewStyledWrapper","ImagePreview","console","log","alt","src","Card","props","funcButtonLabel","funcType","uploadImgUrl","setUploadImgUrl","onClick","a","formData","FormData","append","axios","post","headers","Accept","responseType","response","onload","imageDataUrl","FUNCTION_LIST","Cards","CardsStyledWrapper","map","cardInfo","App","AppStyledWrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8767669.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\n/**\r\n * @description 전역 state context api\r\n */\r\nconst GlobalContext = createContext({\r\n  state: {},\r\n  actions: {},\r\n});\r\n\r\n/**\r\n * @param {*} param0 {children} 하위 리액트 컴포넌트\r\n * @description 전역 context provider\r\n */\r\nconst GlobalProvider = ({ children }) => {\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [imageBinary, setImageBinary] = useState(null);\r\n\r\n  const value = {\r\n    state: { imageFile, imageUrl, imageBinary },\r\n    actions: { setImageFile, setImageUrl, setImageBinary },\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider value={value}>{children}</GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nconst useGlobalContext = () => {\r\n  const value = useContext(GlobalContext);\r\n  const { state = {}, actions = {} } = value;\r\n  return [state, actions];\r\n};\r\n\r\nexport { GlobalContext, GlobalProvider, useGlobalContext };\r\n","import { useRef } from \"react\";\r\nimport { FileDrop } from \"react-file-drop\";\r\nimport styled from \"styled-components\";\r\nimport { useGlobalContext } from \"../context/globalContext\";\r\n\r\nconst FileDropArea = () => {\r\n  const fileInputRef = useRef(null);\r\n  const [state, actions] = useGlobalContext();\r\n  const { setImageFile, setImageUrl, setImageBinary } = actions;\r\n\r\n  const handleFileInputChange = (event) => {\r\n    const { files } = event.target;\r\n\r\n    let reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      const data = reader.result.split(\",\")[1];\r\n      const binaryBlob = atob(data);\r\n      setImageUrl(reader.result);\r\n      setImageFile(files[0]);\r\n      setImageBinary(binaryBlob);\r\n    };\r\n\r\n    reader.readAsDataURL(files[0]);\r\n    // do something with your files...\r\n  };\r\n\r\n  const handleClickTarget = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <FileDropAreaStyledWrapper>\r\n      <div>\r\n        <FileDrop\r\n          //   onFrameDragEnter={(event) => console.log(\"onFrameDragEnter\", event)}\r\n          //   onFrameDragLeave={(event) => console.log(\"onFrameDragLeave\", event)}\r\n          //   onFrameDrop={(event) => console.log(\"onFrameDrop\", event)}\r\n          //   onDragOver={(event) => console.log(\"onDragOver\", event)}\r\n          //   onDragLeave={(event) => console.log(\"onDragLeave\", event)}\r\n          onDrop={(files, event) => {\r\n            setImageFile(files[0]);\r\n            let reader = new FileReader();\r\n            reader.onloadend = () => {\r\n              const data = reader.result.split(\",\")[1];\r\n              const binaryBlob = atob(data);\r\n              setImageUrl(reader.result);\r\n              setImageFile(files[0]);\r\n              setImageBinary(binaryBlob);\r\n            };\r\n            reader.readAsDataURL(files[0]);\r\n          }}\r\n          onTargetClick={handleClickTarget}\r\n        >\r\n          이미지를 넣어주세요 ( 드래그도 가능합니다 + )\r\n        </FileDrop>\r\n        <input\r\n          onChange={handleFileInputChange}\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          className=\"hidden\"\r\n        />\r\n      </div>\r\n    </FileDropAreaStyledWrapper>\r\n  );\r\n};\r\n\r\nconst FileDropAreaStyledWrapper = styled.div`\r\n  /* margin: auto 16px; */\r\n  margin: 10px auto;\r\n  width: 80%;\r\n\r\n  .file-drop {\r\n    /* relatively position the container bc the contents are absolute */\r\n    position: relative;\r\n    height: 150px;\r\n    background-color: #fff;\r\n    box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, 0.2);\r\n    transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n  }\r\n\r\n  .file-drop:hover {\r\n    /* overlay a black mask when dragging over the frame */\r\n    box-shadow: 4px 4px 2px 1px rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  .file-drop > .file-drop-target {\r\n    /* basic styles */\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 2px;\r\n\r\n    /* horizontally and vertically center all content */\r\n    display: flex;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n\r\n    flex-direction: column;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-box-direction: normal;\r\n    -webkit-flex-direction: column;\r\n    -ms-flex-direction: column;\r\n\r\n    align-items: center;\r\n    -webkit-box-align: center;\r\n    -webkit-align-items: center;\r\n    -ms-flex-align: center;\r\n\r\n    justify-content: center;\r\n    -webkit-box-pack: center;\r\n    -webkit-justify-content: center;\r\n    -ms-flex-pack: center;\r\n\r\n    align-content: center;\r\n    -webkit-align-content: center;\r\n    -ms-flex-line-pack: center;\r\n\r\n    text-align: center;\r\n    transition: background-color 1s, color 1s;\r\n    border: #000000 1px dashed;\r\n  }\r\n\r\n  .file-drop > .file-drop-target.file-drop-dragging-over-frame {\r\n    /* overlay a black mask when dragging over the frame */\r\n    border: none;\r\n    background-color: rgba(0, 0, 0, 0.65);\r\n    box-shadow: none;\r\n    z-index: 50;\r\n    opacity: 1;\r\n\r\n    /* typography */\r\n    color: white;\r\n  }\r\n\r\n  .file-drop > .file-drop-target.file-drop-dragging-over-target {\r\n    /* turn stuff orange when we are dragging over the target */\r\n    color: #96c0ce;\r\n    box-shadow: 0 0 13px 3px #96c0ce 0.6;\r\n  }\r\n\r\n  .hidden {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport default FileDropArea;\r\n","import styled from \"styled-components\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <HeaderStyledWrapper>\r\n      <div className=\"header-title-container\">\r\n        <span className=\"header-title\">ONE CLICK IMAGE MOODMAKER</span>\r\n      </div>\r\n    </HeaderStyledWrapper>\r\n  );\r\n};\r\n\r\nconst HeaderStyledWrapper = styled.div`\r\n  /* margin: 20px; */\r\n  margin: 30px auto;\r\n  width: 80%;\r\n\r\n  .header-title-container {\r\n    text-align: center;\r\n    padding: 10px;\r\n    margin: 10px;\r\n  }\r\n\r\n  .header-title {\r\n    padding: 20px;\r\n    display: inline-block;\r\n    box-sizing: border-box;\r\n    border: 1px solid #c25b56;\r\n    border-radius: 10px 10px;\r\n    font-size: 15px;\r\n    transition: opacity 0.5s;\r\n  }\r\n\r\n  .header-title:hover {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\nimport { useGlobalContext } from \"../context/globalContext\";\r\n\r\nconst ImagePreview = () => {\r\n  const [state, actions] = useGlobalContext();\r\n  const { imageFile, imageUrl } = state;\r\n  const { setImageFile, setImageUrl } = actions;\r\n\r\n  console.log(\"imageUrl Check\", imageUrl);\r\n\r\n  return (\r\n    <ImagePreviewStyledWrapper>\r\n      <div className=\"image-preview-container\">\r\n        <div className=\"image-preview-example\">\r\n          <span className=\"image-preview-example-title\">preview</span>\r\n        </div>\r\n        {imageUrl && (\r\n          <img className=\"image-site\" alt={\"preview image\"} src={imageUrl} />\r\n        )}\r\n      </div>\r\n    </ImagePreviewStyledWrapper>\r\n  );\r\n};\r\n\r\nconst ImagePreviewStyledWrapper = styled.div`\r\n  /* margin: 20px; */\r\n  margin: 30px auto;\r\n  width: 80%;\r\n\r\n  .image-preview-container {\r\n    position: relative;\r\n    text-align: center;\r\n    /* left: 50%; */\r\n    padding: 10px;\r\n    margin: 10px auto;\r\n    width: 80%;\r\n    height: 20vmax;\r\n  }\r\n\r\n  .image-preview-example {\r\n    display: table;\r\n    position: absolute;\r\n    box-sizing: border-box;\r\n    background-color: #beb9b5;\r\n    text-align: center;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .image-site {\r\n    display: table;\r\n    position: absolute;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n\r\n  .image-preview-example-title {\r\n    vertical-align: middle;\r\n    display: table-cell;\r\n  }\r\n`;\r\n\r\nexport default ImagePreview;\r\n","import { useGlobalContext } from \"./context/globalContext\";\r\nimport axios from \"axios\";\r\n// import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\n\r\nconst Card = (props) => {\r\n  const [state, actions] = useGlobalContext();\r\n  const { imageFile } = state;\r\n  const { funcButtonLabel, funcType } = props;\r\n\r\n  const [uploadImgUrl, setUploadImgUrl] = useState(null);\r\n\r\n  const handlePictureFunction = (type) => async () => {\r\n    const URL = \"https://master-hi-dt-psi1104.endpoint.ainize.ai/predict\";\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"daytime\", type);\r\n    formData.append(\"source\", imageFile);\r\n    formData.append(\"inference_size\", \"1024\");\r\n\r\n    const response = await axios.post(URL, formData, {\r\n      headers: {\r\n        Accept: \"images/*\",\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      responseType: \"blob\",\r\n    });\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(response.data);\r\n    reader.onload = function () {\r\n      const imageDataUrl = reader.result;\r\n      setUploadImgUrl(imageDataUrl);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <button onClick={handlePictureFunction(funcType)}>\r\n        {funcButtonLabel}\r\n      </button>\r\n      {uploadImgUrl && <img className=\"img-container\" src={uploadImgUrl} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n\r\n// const CardsStyledWrapper = styled.div`\r\n//   .img-container {\r\n//     position: relative;\r\n//     width: 100%;\r\n//     height: 150px;\r\n//     object-fit: cover;\r\n//   }\r\n\r\n//   .card {\r\n//     height: 200px;\r\n//     width: 200px;\r\n//     margin: 10px;\r\n//     padding: 10px;\r\n//     border: rgba(0, 0, 0, 0.12) solid 0.5px;\r\n//     box-sizing: border-box;\r\n//     background-color: #ffffff;\r\n//     box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, 0.2);\r\n//     transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n//   }\r\n\r\n//   .card:hover {\r\n//     box-shadow: 4px 4px 2px 1px rgba(0, 0, 0, 0.2);\r\n//   }\r\n// `;\r\n","import { useGlobalContext } from \"./context/globalContext\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst FUNCTION_LIST = [\r\n  {\r\n    funcButtonLabel: \"day1\",\r\n    funcType: \"day1\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"day2\",\r\n    funcType: \"day2\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"day3\",\r\n    funcType: \"day3\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"day4\",\r\n    funcType: \"day4\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"sunset1\",\r\n    funcType: \"sunset1\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"sunset2\",\r\n    funcType: \"sunset2\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"sunset3\",\r\n    funcType: \"sunset3\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"sunset4\",\r\n    funcType: \"sunset4\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"bluehour1\",\r\n    funcType: \"bluehour1\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"bluehour2\",\r\n    funcType: \"bluehour2\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"night1\",\r\n    funcType: \"night1\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"night2\",\r\n    funcType: \"night2\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"night3\",\r\n    funcType: \"night3\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"night4\",\r\n    funcType: \"night4\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"night5\",\r\n    funcType: \"night5\",\r\n  },\r\n  {\r\n    funcButtonLabel: \"night6\",\r\n    funcType: \"night6\",\r\n  },\r\n];\r\n\r\nconst Cards = (props) => {\r\n  return (\r\n    <CardsStyledWrapper>\r\n      <div className=\"flex-container\">\r\n        {FUNCTION_LIST.map((cardInfo) => (\r\n          <Card\r\n            key={cardInfo.funcType}\r\n            funcType={cardInfo.funcType}\r\n            funcButtonLabel={cardInfo.funcButtonLabel}\r\n          />\r\n        ))}\r\n      </div>\r\n    </CardsStyledWrapper>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n\r\nconst CardsStyledWrapper = styled.div`\r\n  .flex-container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    padding: 30px;\r\n  }\r\n\r\n  .img-container {\r\n    margin: 5px auto;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 150px;\r\n    object-fit: cover;\r\n  }\r\n\r\n  .card {\r\n    height: 200px;\r\n    width: 200px;\r\n    margin: 10px;\r\n    padding: 10px;\r\n    border: rgba(0, 0, 0, 0.12) solid 0.5px;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff;\r\n    box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, 0.2);\r\n    transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n  }\r\n\r\n  .card:hover {\r\n    box-shadow: 4px 4px 2px 1px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\nimport \"./reset.css\";\nimport FileDropArea from \"./components/FileDropArea\";\nimport Header from \"./components/Header\";\nimport {\n  GlobalProvider,\n} from \"./components/context/globalContext\";\nimport ImagePreview from \"./components/ImagePreview\";\n\nimport Cards from \"./components/Cards\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <AppStyledWrapper>\n        <Header />\n        <FileDropArea />\n        <ImagePreview />\n        <Cards />\n        <div className=\"empty-container\"></div>\n      </AppStyledWrapper>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n\nconst AppStyledWrapper = styled.div`\n  position: absolute;\n  background-color: #fef6eb;\n  width: 100%;\n\n  /* height: 100%; */\n\n  .empty-container {\n    height: 1500px;\n  }\n`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}